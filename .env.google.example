# Google OAuth Configuration for Data Collection Feature
# Copy this file to your Supabase project environment variables

# Google OAuth 2.0 Credentials
# Get these from Google Cloud Console (https://console.cloud.google.com)
# 1. Create a new project or select existing
# 2. Enable Google Sheets API
# 3. Create OAuth 2.0 credentials (Web application)
# 4. Add authorized redirect URIs
GOOGLE_CLIENT_ID=your_google_client_id_here.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=GOCSPX-your_client_secret_here
GOOGLE_REDIRECT_URI=https://your-app-domain.com/data-collection/callback

# Example redirect URIs:
# For local development: http://localhost:3000/data-collection/callback
# For production: https://app.convgo.com/data-collection/callback

# These should already exist in your Supabase project:
# OPENAI_API_KEY=sk-...
# SUPABASE_URL=https://your-project.supabase.co
# SUPABASE_SERVICE_ROLE_KEY=eyJ...

# Google Sheets API Scopes (already configured in the code)
# - https://www.googleapis.com/auth/spreadsheets (Read/write access to sheets)
# - https://www.googleapis.com/auth/drive.readonly (Read access to drive for listing sheets)
# - openid (OpenID Connect authentication)
# - email (Access to user's email)
# - profile (Access to user's profile information)

# Setup Instructions:
# 1. Go to https://console.cloud.google.com
# 2. Create a new project or select an existing one
# 3. Navigate to "APIs & Services" > "Library"
# 4. Search for and enable "Google Sheets API"
# 5. Go to "APIs & Services" > "Credentials"
# 6. Click "CREATE CREDENTIALS" > "OAuth client ID"
# 7. Select "Web application" as the application type
# 8. Add authorized redirect URIs (must match GOOGLE_REDIRECT_URI exactly)
# 9. Save the credentials and copy the client ID and secret here
# 10. Add these variables to your Supabase project:
#     - Go to Supabase Dashboard > Project Settings > Edge Functions
#     - Add each environment variable

# Security Notes:
# - Never commit actual credentials to version control
# - Use different credentials for development and production
# - Regularly rotate your client secret
# - Restrict OAuth scopes to minimum required permissions
# - Monitor API usage in Google Cloud Console